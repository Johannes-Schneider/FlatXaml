<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:view="clr-namespace:FlatXaml.View"
                    xmlns:style="clr-namespace:FlatXaml.Style"
                    xmlns:theme="clr-namespace:FlatXaml.Theme">

    <Style TargetType="{x:Type view:FlatButton}" x:Key="{x:Static style:FlatStyleKeys.Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="25" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}" />
        <Setter Property="BackgroundWhenHovered" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundRegular}}" />
        <Setter Property="BackgroundWhenPressed" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundRegular}}" />
        <Setter Property="BackgroundWhenDisabled" Value="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundDisabled}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundRegular}}" />
        <Setter Property="ForegroundWhenHovered" Value="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}" />
        <Setter Property="ForegroundWhenPressed" Value="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundLight}}" />
        <Setter Property="ForegroundWhenDisabled" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDisabled}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:FlatButton}">
                    <Border x:Name="Border"
                            SnapsToDevicePixels="True"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"
                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}">

                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <!-- Hovered -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundWhenHovered}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushWhenHovered}" />
                        </Trigger>
                        <!-- /Hovered -->

                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundWhenPressed}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushWhenPressed}" />
                        </Trigger>
                        <!-- /Pressed -->

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundWhenDisabled}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushWhenDisabled}" />
                        </Trigger>
                        <!-- /Disabled -->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>