<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:style="clr-namespace:FlatXaml.Style"
                    xmlns:theme="clr-namespace:FlatXaml.Theme"
                    xmlns:view="clr-namespace:FlatXaml.View"
                    xmlns:converter="clr-namespace:FlatXaml.Converter"
                    xmlns:icon="clr-namespace:FlatXaml.Icon">

    <Style TargetType="{x:Type view:FlatGroupBox}" x:Key="{x:Static style:FlatStyleKeys.GroupBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundRegular}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDisabled}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:FlatGroupBox}">
                    <ControlTemplate.Resources>
                        <converter:BoolToVisibilityConverter x:Key="TrueToVisible"
                                                             TrueValue="Visible"
                                                             FalseValue="Collapsed" />
                        <converter:BoolToVisibilityConverter x:Key="TrueToCollapsed"
                                                             TrueValue="Collapsed"
                                                             FalseValue="Visible" />
                        <converter:InvertBoolConverter x:Key="Invert" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>


                        <Border Grid.Row="0"
                                Grid.RowSpan="2"
                                BorderThickness="1"
                                CornerRadius="2"
                                Margin="0, 9, 0, 0"
                                SnapsToDevicePixels="True"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCollapsed, Converter={StaticResource TrueToCollapsed}}" />

                        <ContentPresenter Grid.Row="1"
                                          Margin="6"
                                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCollapsed, Converter={StaticResource TrueToCollapsed}}" />

                        <Border Grid.Row="0"
                                Margin="6, 0, 6, 0"
                                BorderThickness="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Padding="3, 0, 3, 0"
                                SnapsToDevicePixels="True"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}">

                            <StackPanel Orientation="Horizontal">

                                <view:FlatIconCheckBox x:Name="ToggleIsCollapsed"
                                                       Margin="0, 0, 6, 0"
                                                       Foreground="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundRegular}}"
                                                       Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                                       Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CanCollapse, Converter={StaticResource TrueToVisible}}"
                                                       IconWhenNotChecked="{DynamicResource {x:Static icon:FlatIconKeys.Invisible}}"
                                                       IconWhenChecked="{DynamicResource {x:Static icon:FlatIconKeys.Visible}}"
                                                       IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCollapsed, Converter={StaticResource Invert}}" />

                                <ContentPresenter ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>