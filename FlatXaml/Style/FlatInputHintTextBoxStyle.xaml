<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:view="clr-namespace:FlatXaml.View"
                    xmlns:theme="clr-namespace:FlatXaml.Theme"
                    xmlns:style="clr-namespace:FlatXaml.Style"
                    xmlns:converter="clr-namespace:FlatXaml.Converter">

    <Style TargetType="{x:Type view:FlatInputHintTextBox}" x:Key="{x:Static style:FlatStyleKeys.InputHintTextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="BorderBrushWhenNotValid" Value="{DynamicResource {x:Static theme:FlatThemeKeys.NegativeRegular}}" />
        <Setter Property="BorderBrushWhenValid" Value="{DynamicResource {x:Static theme:FlatThemeKeys.PositiveRegular}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static theme:FlatThemeKeys.PositiveRegular}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static theme:FlatThemeKeys.FontFamilyRegular}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static theme:FlatThemeKeys.FontSizeRegular}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:FlatInputHintTextBox}">
                    <ControlTemplate.Resources>
                        <converter:IsEmptyToVisibilityConverter x:Key="EmptyToVisibleConverter"
                                                                TrueValue="Visible"
                                                                FalseValue="Collapsed" />
                    </ControlTemplate.Resources>

                    <Border x:Name="Border"
                            Padding="2, 0, 2, 0"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"
                            AllowDrop="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AllowDrop}"
                            BorderThickness="1">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          VerticalAlignment="Center"
                                          AllowDrop="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AllowDrop}"
                                          Margin="0" />


                            <TextBlock IsHitTestVisible="False"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDisabled}}"
                                       FontFamily="{DynamicResource {x:Static theme:FlatThemeKeys.FontFamilyHint}}"
                                       FontSize="{DynamicResource {x:Static theme:FlatThemeKeys.FontSizeRegular}}"
                                       Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputHintText}"
                                       Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Converter={StaticResource EmptyToVisibleConverter}}" />
                        </Grid>
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrushWhenNotValid}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDisabled}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDisabled}}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDisabled}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDisabled}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>