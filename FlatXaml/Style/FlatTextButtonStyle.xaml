<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:view="clr-namespace:FlatXaml.View"
                    xmlns:style="clr-namespace:FlatXaml.Style"
                    xmlns:converter="clr-namespace:FlatXaml.Converter"
                    xmlns:theme="clr-namespace:FlatXaml.Theme">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/FlatXaml;component/Style/FlatButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type view:FlatTextButton}" x:Key="{x:Static style:FlatStyleKeys.TextButton}" BasedOn="{StaticResource {x:Static style:FlatStyleKeys.Button}}">
        <Setter Property="ForegroundWhenDisabled" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundLight}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:FlatTextButton}">
                    <Border x:Name="Border"
                            SnapsToDevicePixels="True"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"
                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}">

                        <Border x:Name="TextBorder"
                                Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding}">

                            <TextBlock x:Name="Text"
                                       VerticalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalContentAlignment}"
                                       HorizontalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalContentAlignment}"
                                       MaxWidth="{Binding ElementName=TextBorder, Path=ActualWidth}"
                                       TextWrapping="Wrap"
                                       Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text}"
                                       Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!-- Hovered -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundWhenHovered}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushWhenHovered}" />
                            <Setter TargetName="Text" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundWhenHovered}" />
                        </Trigger>
                        <!-- /Hovered -->

                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundWhenPressed}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushWhenPressed}" />
                            <Setter TargetName="Text" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundWhenPressed}" />
                        </Trigger>
                        <!-- /Pressed -->

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundWhenDisabled}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushWhenDisabled}" />
                            <Setter TargetName="Text" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundWhenDisabled}" />
                        </Trigger>
                        <!-- /Disabled -->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>