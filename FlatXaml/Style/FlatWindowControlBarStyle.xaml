<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:view="clr-namespace:FlatXaml.View"
                    xmlns:style="clr-namespace:FlatXaml.Style"
                    xmlns:theme="clr-namespace:FlatXaml.Theme"
                    xmlns:converter="clr-namespace:FlatXaml.Converter"
                    xmlns:icon="clr-namespace:FlatXaml.Icon"
                    xmlns:command="clr-namespace:FlatXaml.Command">

    <Style TargetType="{x:Type view:FlatWindowControlBar}" x:Key="{x:Static style:FlatStyleKeys.WindowControlBar}">
        <Setter Property="Background" Value="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundRegular}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static theme:FlatThemeKeys.FontFamilyRegular}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static theme:FlatThemeKeys.FontSizeRegular}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:FlatWindowControlBar}">
                    <ControlTemplate.Resources>
                        <converter:BoolToVisibilityConverter x:Key="TrueToVisibleConverter"
                                                             TrueValue="Visible"
                                                             FalseValue="Collapsed" />
                    </ControlTemplate.Resources>

                    <Grid HorizontalAlignment="Stretch"
                          Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ContentPresenter Grid.Column="0"
                                          Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />

                        <StackPanel Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    Orientation="Horizontal"
                                    VerticalAlignment="Center">

                            <view:FlatIconCheckBox Margin="0, 0, 12, 0"
                                                   IconSize="{DynamicResource {x:Static theme:FlatThemeKeys.FontSizeHint}}"
                                                   IconWhenChecked="{DynamicResource {x:Static icon:FlatIconKeys.PinStuck}}"
                                                   IconWhenNotChecked="{DynamicResource {x:Static icon:FlatIconKeys.PinLose}}"
                                                   VerticalAlignment="Center"
                                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CanToggleStayOnTop, Converter={StaticResource TrueToVisibleConverter}}"
                                                   IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=Topmost, Mode=TwoWay}" />


                            <view:FlatIconButton Icon="{DynamicResource {x:Static icon:FlatIconKeys.Settings}}"
                                                 Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                                 BackgroundWhenHovered="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundRegular}}"
                                                 BackgroundWhenPressed="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDark}}"
                                                 ForegroundWhenHovered="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}"
                                                 ForegroundWhenPressed="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}"
                                                 Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CanOpenSettings, Converter={StaticResource TrueToVisibleConverter}}"
                                                 Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpenSettingsCommand}"
                                                 CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpenSettingsCommandParameter}" />

                            <view:FlatIconButton Icon="{DynamicResource {x:Static icon:FlatIconKeys.Minus}}"
                                                 Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                                 BackgroundWhenHovered="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundRegular}}"
                                                 BackgroundWhenPressed="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDark}}"
                                                 ForegroundWhenHovered="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}"
                                                 ForegroundWhenPressed="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}"
                                                 Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CanMinimize, Converter={StaticResource TrueToVisibleConverter}}"
                                                 Command="{x:Static command:GenericCommandCollection.MinimizeWindow}"
                                                 CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />

                            <view:FlatIconButton Icon="{DynamicResource {x:Static icon:FlatIconKeys.Rectangle}}"
                                                 Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                                 BackgroundWhenHovered="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundRegular}}"
                                                 BackgroundWhenPressed="{DynamicResource {x:Static theme:FlatThemeKeys.ForegroundDark}}"
                                                 ForegroundWhenHovered="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}"
                                                 ForegroundWhenPressed="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}"
                                                 Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CanMaximize, Converter={StaticResource TrueToVisibleConverter}}"
                                                 Command="{x:Static command:GenericCommandCollection.ToggleMaximizeWindow}"
                                                 CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />

                            <view:FlatIconButton Icon="{DynamicResource {x:Static icon:FlatIconKeys.Cross}}"
                                                 Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                                 BackgroundWhenHovered="{DynamicResource {x:Static theme:FlatThemeKeys.NegativeRegular}}"
                                                 BackgroundWhenPressed="{DynamicResource {x:Static theme:FlatThemeKeys.NegativeDark}}"
                                                 ForegroundWhenHovered="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}"
                                                 ForegroundWhenPressed="{DynamicResource {x:Static theme:FlatThemeKeys.BackgroundRegular}}"
                                                 Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CanClose, Converter={StaticResource TrueToVisibleConverter}}"
                                                 Command="{x:Static command:GenericCommandCollection.CloseWindow}"
                                                 CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>